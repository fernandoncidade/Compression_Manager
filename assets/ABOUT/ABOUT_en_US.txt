COMPRESSION MANAGER
Version: 0.0.1.0
Authors: Fernando Nillsson Cidade

Summary:
COMPRESSION MANAGER is a lightweight graphical utility for Windows designed for packing, extracting and integrity-checking files and folders. It supports multiple formats (ZIP, 7Z, TAR, WIM and others recognized by 7‑Zip), multiple output directories per format, configurable compression methods, a process queue, and drag-and-drop operation. The interface is multilingual (pt_BR / en_US) and prepared for packaging as a standalone executable (no manual Python dependency installation required for end users).

Key features:
- Compress folders and files into .zip, .7z, .tar and .wim formats.
- Extract compressed archives in many formats supported by 7‑Zip (.rar, .zip, .7z, .tar, .wim, .bz2, .tar.xz, .tgz, .tar.gz, .zipx, .lzh, .iso, etc.).
- Select and persist multiple output directories, independently per format.
- Drag & drop support to add files and folders to input and output lists.
- Configurable compression methods per format (levels 0–9 where applicable) with preference persistence.
- "Save As" mode to create packages with specific settings without changing default preferences.
- Option to update existing archives instead of recreating them.
- Archive integrity testing using 7‑Zip's "t" command to validate packages.
- Compression queueing: new jobs can wait while another task of the same format runs.
- Translatable messages and dialogs; runtime language switching.
- "About" dialog displays description, history, licenses, notices and privacy policy loaded from included resources.
- Offline operation: all data is stored locally (configuration and preference files saved in the user's persistent directory).

Architecture and integration:
- GUI base: PySide6 (Qt) with custom widgets to facilitate multiple selection and drag-and-drop.
- Compression/extraction engine: 7‑Zip (7zG.exe). The application looks for a 7‑Zip executable bundled with the app (folder "7-Zip") or in standard system paths (Program Files). If 7‑Zip is not found, compression/extraction operations will not work and the user will be notified.
- Threads: compression, extraction and verification operations run in threads to keep the UI responsive.
- Persistence: compression and language preferences are saved as JSON files in the user's persistent directory (obter_caminho_persistente).

Installation and distribution:
- Designed to be packaged as a Windows executable, including resources and translations.
- When distributed as an installer/executable, the end user does not need to install Python dependencies.
- Open/Save dialogs use native system interfaces when available.

Privacy and data storage:
- Settings and preferences (for example, config.json, language.json) are saved locally in the user's persistent path (for example, AppData).
- No data is automatically transmitted to external servers by the application.
- Exported files (archives, reports, etc.) are written to locations chosen by the user.

Quick start (brief):
1. Add folders/files by dragging them into the input list or using "Add Folders" / "Add Files".
2. Specify output directories for each format (buttons "Specify Output" for .ZIP, .7Z, .TAR, .WIM and Extraction).
3. Select the compression method under Settings → Select Compression Method.
4. Use "Store" to start compression in the chosen format.
5. Check multiple format options to show/hide related layouts.
6. To test archive integrity, select archives and run "Test Integrity".
7. To extract, select compressed files in the input list and choose a destination folder.

Common troubleshooting:
- 7‑Zip not found: verify that 7zG.exe is installed on the system or available inside the application's "7-Zip" folder. The app will show instructive error messages.
- Error writing settings: confirm write permissions for the user's folder (AppData).
- Files do not extract correctly: check that the format is supported and that 7‑Zip is functional.
- High CPU usage during compression: high compression levels (8–9) are CPU-intensive; reduce the level or run at a suitable time.

Known limitations:
- Supported formats and behavior depend on the 7‑Zip executable present on the system.
- Integration with PDFs/XLSX for import/export (if present) requires format compliance — use files generated by this application or compatible ones.

License:
- Third-party components follow their respective licenses; complete license and notice information is available in the "About" dialog and license files distributed with the installer.

Contact and support:
- Author: Fernando Nillsson Cidade
- For suggestions, bug reports and contributions, consult the channels indicated in the installer or included documentation.

Final notes:
This document describes the content of the "About" dialog and the application's behavior when distributed as a Windows executable. Advanced users interested in integration, automation, or the storage location of configuration files should consult the included technical documentation or the source code for further details.
